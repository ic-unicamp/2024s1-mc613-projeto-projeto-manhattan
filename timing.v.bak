module timing (
    input button,
    input clk,
    input reset,
    input read,
    output reg dot,
    output reg dash,
    output reg intrachar,
    output reg interchar,
    output reg interword,
    output reg writing,
    output reg [3:0] t
);

parameter LIMIAR_counting = 50000000; // 50 million clocks = 1s 

reg [2:0] state;
reg [100:0] counting;
reg stop_couting;

always @(posedge clk) begin
    if (reset) begin
        counting = 0;
        t = 1;
    end else if (t != 7) begin
        counting = counting + 1;
        if (counting = LIMIAR_counting) begin
            t = t + 1;
            counting = 0;
        end 
    end else if (stop_couting) begin
        t = 0;
    end
end

always @(posedge clk) begin
    if (reset) begin // if reset activate (high)
        state = 0;
        
        dot = 0;
        dash = 0;

        intrachar = 0;
        interchar = 0;
        interword = 0;
        
        writing = 0;
        stop_couting = 0;
    end else begin       
        case (state)
            0: begin // não está com nenhum botão apertado
                if (t == 7) begin // tempo chegou no limite, não contará mais até o botão ser apertado
                    stop_couting = 1;
                end else if (!button) begin 
                    state = 1;
                    stop_couting = 1;
                end
            end 
            1: begin // analise do tempo sem apertar botão
                if (t <= 1) begin // espaço entre caracteres morse
                    intrachar = 1;
                end else if (t <= 3 && t > 1) begin // espaço entre caracteres
                    interchar = 1;
                end else if (t <= 7 && t > 3) begin
                    interword = 1;
                end else if (read) begin
                    state = 2;
                    intrachar = 0;
                    interchar = 0;
                    interword = 0;
                    stop_couting = 0;
                end
            end
            default: 
        endcase
    end
end

endmodule